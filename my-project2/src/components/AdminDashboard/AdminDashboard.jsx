/**
 * This code was generated by Builder.io.
 */
import React, { useEffect, useState } from "react";
import Header from "./Header";
import SearchBar from "./SearchBar";
import StatCard from "./StatCard";
import UserChart from "./UserChart";
import UserList from "./UserList";
import UserForm from "./UserForm";
import BackupControls from "./BackupControls";
import { useAuth } from "../../lib/AuthProvider";
import { supabase } from "../../lib/supabase";

// import { useMembersList } from "../../../../my-project/src/lib/api";
// import { useGymsList, useRoomsList } from "../../lib/api";

const AdminDashboard = () => {
  const {session, loading} = useAuth()
  const [profiles, setProfiles] = useState(null)
  const [rooms, setRooms] = useState(null)
  const [gyms, setGyms] = useState(null)
  const [locations, setLocations] = useState(null)

  useEffect(()=>{
    const  fetch = async () =>{

      let { data: profile, error } = await supabase
      .from('profile')
      .select('*')
      let { data: rooms } = await supabase
      .from('room')
      .select('*')
      let { data: gyms } = await supabase
      .from('gym')
      .select('*')
      let { data: locations } = await supabase
      .from('location')
      .select('*')
      if(!error){
        setProfiles(profile)
        setGyms(gyms)
        setRooms(rooms)
        setLocations(locations)
      }

    }
    fetch()

  },[])
  // const {data: rooms} = useRoomsList()
  // const { data: gyms} = useGymsList()

  console.log(session, "...")
  const signOut = () =>{
    supabase.auth.signOut()
  }
  if(!session){
    return;
  }
  return (
    <div className="flex flex-col justify-center pb-3.5 bg-gray-700">
      <Header />
      {/* <SearchBar /> */}
      <main className="flex flex-col px-20 mt-8 w-full max-md:px-5 max-md:max-w-full">
        <section className="max-md:max-w-full">
          <div className="flex gap-5 max-md:flex-col max-md:gap-0">
            <StatCard
              title="Users quantity"
              value= {profiles?.length} //{profiles?.length}
              change={profiles ? profiles?.map((gym)=> gym.email + ' | ') : ''}

            />
            <StatCard
              title="Room created"
              value={rooms?.length}
              change={rooms ? rooms?.map((gym)=> gym.name + ' | ') : ''}
            />
            <StatCard
              title="Gym included"
              value={gyms?.length}
              change={gyms ? gyms?.map((gym)=> gym.name + ' | ') : ''}
            />
          </div>
        </section>
        <section className="mt-8 max-md:max-w-full">
          <div className="flex gap-5 max-md:flex-col max-md:gap-0">
            <UserList users={profiles} />
            <UserForm users={profiles} />

          </div>
        </section>
        <section className="mt-7 max-w-full w-[857px]">
          <div className="flex gap-5 max-md:flex-col max-md:gap-0">
            <BackupControls data={ {profiles, gyms, rooms} } locations={locations} />

          </div>

        </section>
      </main>
    </div>
  );
};

export default AdminDashboard;
